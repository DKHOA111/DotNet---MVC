@model Idear.Areas.Staff.ViewModels.IdeasVM

@{
    ViewData["Title"] = "Details";
    //ViewData["IdeaId"] = Model.Idea.Id;
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <h4>Idea</h4>
        </div>
        <div class="card-body">
            <div class="card">
                <div class="card-body">@Model.Idea.Text</div>
            </div>
            <br />
            <div class="row g-2 align-items-center">
                <div class="col-md-4">
                    <div class="text-center">
                        by @if (Model.Idea.IsAnonymous)
                            {
                                <text>Anonymous User</text>
                            }
                            else
                                @Model.Idea.User!.FullName
                        at @Model.Idea.DateTime
                        </div>
                </div>
                <div class="col-md-4">
                    <div class="text-center"> Category: @Model.Idea.Category!.Name</div>
                </div>
                <div class="col-md-4">
                    <div class="text-center">
                        <span><i class="bi bi-eye"></i> @Model.Idea.Views!.Sum(v=> v.VisitTime) views</span>
                        <button id="btn-like" type="button" class="btn btn-primary">
                            <i class="bi bi-hand-thumbs-up"></i> @Model.Idea.Reacts.Where(r => r.ReactFlag == 1).Count() Likes
                        </button>
                        <button id="btn-dislike" type="button" class="btn btn-dark">
                            <i class="bi bi-hand-thumbs-down"></i> @Model.Idea.Reacts.Where(r => r.ReactFlag == -1).Count() DisLikes
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4>Comments</h4>
                </div>
                <div class="card-body">
                    <div class="card">
                        <div class="card-body">
                            <p class="card-text text-bold">@Model.Idea.Comments!.Count comments</p>
                            <div id="partial-view-container">
                                @await Html.PartialAsync("~/Areas/Staff/Views/Comments/_CreateComment.cshtml", Model.Comment)
                            </div>
                        </div>
                    </div>
                    @foreach (var comment in Model.Idea.Comments!){
                        <div class="card">
                            <div class="card-body">
                                <p class="card-text">
                                    @if (comment.IsAnonymous)
                                        {
                                        <b><text>Anonymous User</text></b>
                                    }
                                    else
                                        {
                                        <b>@comment.User!.FullName</b>
                                        }

                                </p>
                                <p>@comment.Text at @comment.Datetime</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h4>Ideas with similar category</h4>
                </div>
                <div class="card-body">
                    @foreach (var idea in Model.RelatedIdeas)
                    {
                        <div class="card">
                            <div class="card-body">
                                @idea.Text by
                                @if (idea.IsAnonymous)
                                    {
                                        <text>Anonymous User</text>
                                    }
                                else
                                    @idea.User!.FullName
                                    at
                                    @idea.DateTime
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function sendAjaxRequest(flag) {
            // Get the CSRF token from the server
            $.get("/Staff/Ideas/GetCsrfToken", function (token) {
                // Add the CSRF token to the AJAX request header
                var headers = {};
                headers["RequestVerificationToken"] = token;
                var id = `@Model.Idea.Id`;

                // Send the AJAX request with the CSRF token included in the header
                $.ajax({
                    url: '/Staff/Ideas/Like',
                    type: "POST",
                    data: { reactFlag: flag, ideaId: id },
                    headers: headers,
                    success: function (result) {
                        location.reload();
                    },
                });
            });
        }
        $(document).ready(function() {
            $('#comment-input').on('input', function () {
                var text = $(this).val();
                var charCount = text.length;
                $('#char-count').text(charCount);
            });

            $('#btn-like').click(function() {
                sendAjaxRequest(1);
            });
            $('#btn-dislike').click(function() {
                sendAjaxRequest(-1);
            });
            $('#btn-new-cmt').click(function (e) {
                e.preventDefault();

                $.ajax({
                    url: '/Staff/Comments/Create',
                    type: 'POST',
                    data: $('#form-new-cmt').serialize(),
                    success: function (result) {
                        if (result == "New comment added!") {
                            location.reload();
                        } else {
                            $('#partial-view-container').html(result);
                        }
                    }
                });
            })
        })

    </script>
}