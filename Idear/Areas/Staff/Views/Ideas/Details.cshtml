@model Idear.Areas.Staff.ViewModels.IdeasVM

@{
	ViewData["Title"] = "Details";
}

<div class="container-fluid">
	<div class="card mx-3 mt-n5 shadow-lg home-section">
		<div class="card-header bg-info bg-opacity-50 header-section">
			<h4><i class="bi bi-lightbulb"></i> Idea</h4>
		</div>
		<div class="card-body">
			<div class="row g-2 align-items-center">
				<div class="col-md-8">
					<div class="card">
						<div class="card-body">@Model.Idea.Text</div>
					</div>
				</div>
				<div class="col-md-4">
					<div class="card">
						@if (!string.IsNullOrEmpty(Model.Idea.FilePath))
						{
							<a class="card-body" asp-controller="Ideas" asp-action="DownloadFile" asp-route-id="@Model.Idea.Id">
								@{
									var extension = System.IO.Path.GetExtension(Model.Idea.FilePath);
									var icon = extension switch
									{
										".pdf" => "bi bi-file-earmark-pdf",
										".doc" or ".docx" => "bi bi-file-earmark-word",
										".xls" or ".xlsx" => "bi bi-file-earmark-excel",
										".png" or ".jpg" or ".gif" => "bi bi-file-earmark-image",
										".ppt" or ".pptx" => "bi bi-file-earmark-ppt",
										_ => "bi bi-file-earmark"
									};
								}
								<i class="@icon"></i>
								<span>&nbsp;Download Supported Files</span>
							</a>
						}
						else
						{
							<div class="card-body">
								<i class="bi bi-question-circle"></i>&nbsp;No Supported File
							</div>
						}
					</div>
				</div>
			</div>
			<br>
			<div class="row g-2 align-items-center">
				<div class="col-md-4">
					<div class="text-center">
						by @if (Model.Idea.IsAnonymous)
						{
							<text>Anonymous User</text>
						}
						else
							@Model.Idea.User!.FullName

							at @Model.Idea.DateTime
						</div>
					</div>
					<div class="col-md-4">
						<div class="text-center"> Category: @Model.Idea.Category!.Name</div>
					</div>

					<!-- View, Like, Dislike Section -->
					<div class="col-md-4">
						<div class="text-center">
							<span><i class="bi bi-eye"></i> @Model.Idea.Views!.Sum(v=> v.VisitTime) views</span>
							<button id="btn-like" type="button" class="btn btn-primary ">
								<i class="bi bi-hand-thumbs-up@( Model.ReactFlag == 1 ? "-fill" : "" )"></i> <span>@Model.Idea.Reacts.Where(r => r.ReactFlag == 1).Count()</span> Likes
							</button>
							<button id="btn-dislike" type="button" class="btn btn-dark">
								<i class="bi bi-hand-thumbs-down@( Model.ReactFlag == -1 ? "-fill" : "" )"></i> <span>@Model.Idea.Reacts.Where(r => r.ReactFlag == -1).Count()</span> DisLikes
							</button>
						</div>
					</div>
					<!--/ View, Like, Dislike Section -->

				</div>
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-md-8">
				<div class="card mx-3 mt-n5 shadow-lg home-section">
					<div class="card-header bg-purple header-section">
						<h4><i class="bi bi-pencil-square"></i> Comments</h4>
					</div>
					<div class="card-body">
						<div class="card" id="card-new-cmt">
							<div class="card-body">
								<p class="card-text text-bold"><span id="cmt-count">@Model.Idea.Comments!.Count</span> comments</p>

								<!-- Create new comment Section -->
								@if (Model.Idea.Topic!.FinalClosureDate >= DateTime.Now)
							{
								<form>
									<div class="mb-3">
										<textarea id="input-cmt" class="form-control" rows="3" placeholder="Write a new comment here"></textarea>
									</div>
									<div class="mb-3 form-check">
										<div class="row">
											<div class="col-6">
												<input type="checkbox" class="form-check-input" id="chk-anonymous">
												<label class="form-check-label" for="chk-anonymous">Post this comment as anonymous</label>
											</div>
											<div class="col-6 text-right">
												<span><span id="char-count">0</span>/500</span>
												<button id="btn-new-cmt" type="button" class="btn btn-primary">Submit</button>
											</div>
										</div>
									</div>
								</form>
							}
							<!--/ Create new comment Section -->

						</div>
					</div>

					@foreach (var comment in Model.Idea.Comments!.OrderByDescending(c => c.Datetime))
					{
						<div class="card">
							<div class="card-body">
								<p class="card-text" id="@comment.Id">
									@if (comment.IsAnonymous)
									{
										<b><text>Anonymous User</text></b>
									}
									else
									{
										<b>@comment.User!.FullName</b>
									}

								</p>
								<p>@comment.Text</p>
								<p class="text-right">
									<small class="text-muted">
										at @comment.Datetime
									</small>
								</p>
							</div>
						</div>
					}
				</div>
			</div>
			<br />
		</div>
		<div class="col-md-4">
			<div class="card mx-3 mt-n5 shadow-lg home-section">
				<div class="card-header bg-success bg-opacity-50 header-section">
					<h4><i class="bi bi-tags"></i> Ideas with similar category</h4>
				</div>
				<div class="card-body">
					@foreach (var idea in Model.RelatedIdeas)
					{
						<div class="card">
							<a class="card-body" asp-area="Staff" asp-controller="Ideas" asp-action="Details" asp-route-id="@idea.Id">
								@idea.Text
								<small class="text-muted">
									by
									@if (idea.IsAnonymous)
									{
										<text>Anonymous User</text>
									}
									else
									{
										@idea.User!.FullName
									}
									at
									@idea.DateTime
								</small>
							</a>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		function ajaxPostReact(flag) {
			// Get the CSRF token from the server
			$.get("/Staff/Helpers/GetCsrfToken", function (token) {
				// Add the CSRF token to the AJAX request header
				var headers = {};
				headers["RequestVerificationToken"] = token;

				// Get the current idea's id
				var id = `@Model.Idea.Id`;

				// Send the AJAX request with the CSRF token included in the header
				$.ajax({
					url: '/Staff/Reacts/Like',
					type: "POST",
					data: { reactFlag: flag, ideaId: id },
					headers: headers,
					success: function (result) {
						// update like, dislike UI after successfully change the backend
						updateReactButtons(result.flag, result.likeCount, result.dislikeCount);
					},
				});
			});
		}

		function updateReactButtons(flag, likeCount, dislikeCount) {
			if (flag == 1) {
				$('#btn-like > i').removeClass('bi-hand-thumbs-up').addClass('bi-hand-thumbs-up-fill');
				$('#btn-dislike > i').removeClass('bi-hand-thumbs-down-fill').addClass('bi-hand-thumbs-down');
			} else if (flag == -1) {
				$('#btn-dislike > i').removeClass('bi-hand-thumbs-down').addClass('bi-hand-thumbs-down-fill');
				$('#btn-like > i').removeClass('bi-hand-thumbs-up-fill').addClass('bi-hand-thumbs-up');
			} else {
				$('#btn-like > i').removeClass('bi-hand-thumbs-up-fill').addClass('bi-hand-thumbs-up');
				$('#btn-dislike > i').removeClass('bi-hand-thumbs-donw-fill').addClass('bi-hand-thumbs-down');
			}

			$('#btn-like > span').text(likeCount);
			$('#btn-dislike > span').text(dislikeCount);
		}

		function ajaxPostCmt() {
			// Get the CSRF token from the server
			$.get("/Staff/Helpers/GetCsrfToken", function (token) {
				// Add the CSRF token to the AJAX request header
				var headers = {};
				headers["RequestVerificationToken"] = token;

				// Get the necessary info for creating a new cmt
				var id = `@Model.Idea.Id`;
				var cmtText = $('#input-cmt').val();
				var isAnonymous = $('#chk-anonymous').prop('checked');
				var topicFinalClosureDate = `@Model.Idea.Topic!.FinalClosureDate`;

				// Send the AJAX request with the CSRF token included in the header
				$.ajax({
					url: '/Staff/Comments/Create',
					type: "POST",
					data: { 'cmtText': cmtText, 'isAnonymous': isAnonymous, ideaId: id, deadline: topicFinalClosureDate },
					headers: headers,
					success: function (result) {
						// update cmt UI after successfully change the backend
						updateCmtUI(result, isAnonymous, cmtText);
					},
				});
			});
		}

		function updateCmtUI(result, isAnonymous, cmtText) {
			// add the new comment after the 'create comment' section
			var cmtOwner = isAnonymous ? 'Anonymous User' : result.user;
			$('#card-new-cmt').after(
				`
						<div class="card">
							<div class="card-body">
								<p class="card-text" id="${result.id}">
									<b><text>${cmtOwner}</text></b>
								</p>
								<p>${cmtText}</p>
								<p class="text-right">
									<small class="text-muted">
										at ${result.dateTime}
									</small>
								</p>
							</div>
						</div>
						`
			);

			// update comment count of this idea page
			var cmtCount = $('#cmt-count');
			cmtCount.text(parseInt(cmtCount.text()) + 1);

			// clear comment textarea and checkbox
			$('#input-cmt').val('');
			$('#chk-anonymous').prop('checked', false);
		}

		$(document).ready(function () {
			$('#input-cmt').on('input', function () {
				var text = $(this).val();
				var charCount = text.length;
				$('#char-count').text(charCount);
			});

			$('#btn-like').click(function () {
				ajaxPostReact(1);
			});
			$('#btn-dislike').click(function () {
				ajaxPostReact(-1);
			});
			$('#btn-new-cmt').click(ajaxPostCmt);
		})

	</script>
}